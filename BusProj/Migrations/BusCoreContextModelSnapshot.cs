// <auto-generated />
using System;
using BusProj.Repository.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusCore.Migrations
{
    [DbContext(typeof(BusCoreContext))]
    partial class BusCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("BusCore.Business.Identity.Organization", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("BusCore.Business.Identity.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("Locale");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("OrgId");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Locale");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.HasIndex("OrgId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BusCore.Repository.Entities.Model.TipoOnibus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<double>("Peso");

                    b.HasKey("Id");

                    b.ToTable("TipoOnibus");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Deteccao", b =>
                {
                    b.Property<int>("DetecaoTipoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FaixasCriteriosDeteccao");

                    b.Property<int>("IndiceDeteccao");

                    b.Property<string>("ProbabilidadeDeteccao");

                    b.HasKey("DetecaoTipoId");

                    b.ToTable("Deteccao");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Embreagem", b =>
                {
                    b.Property<int>("EmbreagemID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<int?>("DeteccaoID");

                    b.Property<int?>("LinhaID");

                    b.Property<int?>("OcorrenciaID");

                    b.Property<int>("RPNEmbreagemCalculado");

                    b.Property<int>("RPNParada");

                    b.Property<int>("RPNRedutores");

                    b.Property<int>("RPNSemaforo");

                    b.Property<int?>("SeveridadeID");

                    b.Property<int?>("TipoDescricaoID");

                    b.HasKey("EmbreagemID");

                    b.HasIndex("DeteccaoID");

                    b.HasIndex("LinhaID");

                    b.HasIndex("OcorrenciaID");

                    b.HasIndex("SeveridadeID");

                    b.HasIndex("TipoDescricaoID");

                    b.ToTable("Embreagem");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Freio", b =>
                {
                    b.Property<int>("FreioID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<int?>("DeteccaoID");

                    b.Property<int?>("LinhaID");

                    b.Property<int?>("OcorrenciaID");

                    b.Property<int>("RPNFreioCalculado");

                    b.Property<int>("RPNPontosParada");

                    b.Property<int>("RPNRedutores");

                    b.Property<int>("RPNSemaforo");

                    b.Property<int?>("SeveridadeID");

                    b.Property<int?>("TipoDescricaoID");

                    b.HasKey("FreioID");

                    b.HasIndex("DeteccaoID");

                    b.HasIndex("LinhaID");

                    b.HasIndex("OcorrenciaID");

                    b.HasIndex("SeveridadeID");

                    b.HasIndex("TipoDescricaoID");

                    b.ToTable("Freio");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Linha", b =>
                {
                    b.Property<int>("LinhaID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("NomeLinha");

                    b.Property<int>("NumBuracos");

                    b.Property<int>("NumLombadas");

                    b.Property<int>("NumParadas");

                    b.Property<int>("NumSemaforo");

                    b.Property<int>("NumeroLinha");

                    b.Property<int>("TipoOnibusId");

                    b.Property<double>("TotalKmEmbreagemFabrica");

                    b.Property<double>("TotalKmFreiosFabrica");

                    b.Property<double>("TotalKmSuspensaoFabrica");

                    b.Property<double>("TotalRPNEmbreagemFabrica");

                    b.Property<double>("TotalRPNFreiosFabrica");

                    b.Property<double>("TotalRPNSuspensaoFabrica");

                    b.HasKey("LinhaID");

                    b.HasIndex("TipoOnibusId");

                    b.ToTable("Linha");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Ocorrencia", b =>
                {
                    b.Property<int>("OcorrenciaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IndiceOcorrencia");

                    b.Property<string>("Probabilidade");

                    b.Property<string>("TaxasFalhasPossiveis");

                    b.HasKey("OcorrenciaId");

                    b.ToTable("Ocorrencia");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Severidade", b =>
                {
                    b.Property<int>("SeveridadeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EfeitoDaSeveridade");

                    b.Property<int>("IndiceSeveridade");

                    b.Property<string>("SeveridadeTipo");

                    b.HasKey("SeveridadeId");

                    b.ToTable("Severidade");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Suspensao", b =>
                {
                    b.Property<int>("SuspensaoID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<int?>("DeteccaoID");

                    b.Property<int?>("LinhaID");

                    b.Property<int?>("OcorrenciaID");

                    b.Property<int>("RPNBuraco");

                    b.Property<int>("RPNCarga");

                    b.Property<int>("RPNKmFabrica");

                    b.Property<int>("RPNRedutor");

                    b.Property<int>("RPNSuspensaoCalculado");

                    b.Property<int?>("SeveridadeID");

                    b.Property<int?>("TipoDescricaoID");

                    b.HasKey("SuspensaoID");

                    b.HasIndex("DeteccaoID");

                    b.HasIndex("LinhaID")
                        .IsUnique();

                    b.HasIndex("OcorrenciaID");

                    b.HasIndex("SeveridadeID");

                    b.HasIndex("TipoDescricaoID");

                    b.ToTable("Suspensao");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.TipoDescricao", b =>
                {
                    b.Property<int>("TipoDescricaoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("TipoDescricaoID");

                    b.ToTable("TipoDescricao");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusCore.Business.Identity.User", b =>
                {
                    b.HasOne("BusCore.Business.Identity.Organization")
                        .WithMany()
                        .HasForeignKey("OrgId");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Embreagem", b =>
                {
                    b.HasOne("BusProj.Repository.Entities.Model.Deteccao", "Deteccao")
                        .WithMany()
                        .HasForeignKey("DeteccaoID");

                    b.HasOne("BusProj.Repository.Entities.Model.Linha", "Linha")
                        .WithMany()
                        .HasForeignKey("LinhaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("OcorrenciaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Severidade", "Severidade")
                        .WithMany()
                        .HasForeignKey("SeveridadeID");

                    b.HasOne("BusProj.Repository.Entities.Model.TipoDescricao", "DescricaoTipo")
                        .WithMany()
                        .HasForeignKey("TipoDescricaoID");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Freio", b =>
                {
                    b.HasOne("BusProj.Repository.Entities.Model.Deteccao", "Deteccao")
                        .WithMany()
                        .HasForeignKey("DeteccaoID");

                    b.HasOne("BusProj.Repository.Entities.Model.Linha", "Linha")
                        .WithMany()
                        .HasForeignKey("LinhaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("OcorrenciaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Severidade", "Severidade")
                        .WithMany()
                        .HasForeignKey("SeveridadeID");

                    b.HasOne("BusProj.Repository.Entities.Model.TipoDescricao", "DescricaoTipo")
                        .WithMany()
                        .HasForeignKey("TipoDescricaoID");
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Linha", b =>
                {
                    b.HasOne("BusCore.Repository.Entities.Model.TipoOnibus", "TipoOnibus")
                        .WithMany()
                        .HasForeignKey("TipoOnibusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusProj.Repository.Entities.Model.Suspensao", b =>
                {
                    b.HasOne("BusProj.Repository.Entities.Model.Deteccao", "Deteccao")
                        .WithMany()
                        .HasForeignKey("DeteccaoID");

                    b.HasOne("BusProj.Repository.Entities.Model.Linha", "Linha")
                        .WithOne("Suspensao")
                        .HasForeignKey("BusProj.Repository.Entities.Model.Suspensao", "LinhaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("OcorrenciaID");

                    b.HasOne("BusProj.Repository.Entities.Model.Severidade", "Severidade")
                        .WithMany()
                        .HasForeignKey("SeveridadeID");

                    b.HasOne("BusProj.Repository.Entities.Model.TipoDescricao", "DescricaoTipo")
                        .WithMany()
                        .HasForeignKey("TipoDescricaoID");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusCore.Business.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusCore.Business.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusCore.Business.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusCore.Business.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
